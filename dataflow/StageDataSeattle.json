{
	"name": "StageDataSeattle",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceFileSeattle",
						"type": "DatasetReference"
					},
					"name": "FileSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SeattleSFStage",
						"type": "DatasetReference"
					},
					"name": "sinkSF"
				}
			],
			"transformations": [
				{
					"name": "TransposeColumns"
				},
				{
					"name": "PickRequiredColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_ID as string (\"10\")",
				"}",
				"source(output(",
				"          License_Issue_Date as string,",
				"          License_Number as string,",
				"          Animals_Name as string,",
				"          Species as string,",
				"          Primary_Breed as string,",
				"          Secondary_Breed as string,",
				"          ZIP_Code as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FileSource",
				"FileSource derive(License_Issue_Date = toDate(License_Issue_Date, 'MMMM dd yyyy'),",
				"          Secondary_Breed = iifNull(Secondary_Breed, 'Unknown'),",
				"          ZIP_Code = lpad(toString(ZIP_Code),5,'0'),",
				"          Species = upper(Species),",
				"          License_Number = toInteger(translate(License_Number,'S','')),",
				"          Animals_Name = translate(Animals_Name,'()[]',''),",
				"          Job_ID = $Job_ID,",
				"          Load_Dt = currentTimestamp()) ~> TransposeColumns",
				"TransposeColumns select(mapColumn(",
				"          License_Issue_Date,",
				"          License_Number,",
				"          Animal_Name = Animals_Name,",
				"          Species,",
				"          Primary_Breed,",
				"          Secondary_Breed,",
				"          ZIP_Code,",
				"          Job_ID,",
				"          Load_Dt",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> PickRequiredColumns",
				"PickRequiredColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LICENSE_ISSUE_DATE = License_Issue_Date,",
				"          LICENSE_NUMBER = License_Number,",
				"          ANIMAL_NAME = Animal_Name,",
				"          SPECIES = Species,",
				"          PRIMARY_BREED = Primary_Breed,",
				"          SECONDARY_BREED = Secondary_Breed,",
				"          ZIP_CODE = ZIP_Code,",
				"          DI_JOB_ID = Job_ID,",
				"          DI_LOAD_DT = Load_Dt",
				"     )) ~> sinkSF"
			]
		}
	}
}