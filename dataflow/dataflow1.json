{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustData2SF",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerSF",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerSF",
						"type": "DatasetReference"
					},
					"name": "CustomerDimMaxID"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimCustomerSF",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "split1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "SourceDataWithSK"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CUSTOMERID as decimal(38,0),",
				"          CUSTOMERNAME as string,",
				"          BILLTO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATED_DT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source2",
				"source(output(",
				"          MAXCUSTSK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(customer_SK), 0) AS MaxCustSK FROM TEMP_SCHEMA.dim_customer',",
				"     format: 'query') ~> CustomerDimMaxID",
				"SourceDataWithSK, source2 lookup(CUSTOMERID == CUSTOMER_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 split(isNull(CUSTOMER_SK),",
				"     !isNull(CUSTOMER_SK),",
				"     disjoint: false) ~> split1@(UnmatchedRows, MatchedRows)",
				"split1@UnmatchedRows keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"source1, CustomerDimMaxID join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataWithSK",
				"surrogateKey1 derive(CUSTOMER_SK = MAXCUSTSK + RowNum,",
				"          DI_LOAD_DT = currentDate(),",
				"          DI_JOB_ID = uuid()) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATED_DT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID = CUSTOMERID,",
				"          CUSTOMER_NAME = CUSTOMERNAME,",
				"          DI_CREATED_DT = DI_LOAD_DT,",
				"          PID = DI_JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}